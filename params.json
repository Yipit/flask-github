{"name":"flask-github","body":"Installation\r\n------------\r\n\r\n\tpip install flask-github\r\n\r\nUsage\r\n-------\r\n\r\nAn example application is provided. Getting it up and running should be pretty straightforward:\r\n\r\n1. Create a new application on Github (or use an existing one)\r\n2. Add the `client_id` and `client_secret` to `config.json`\r\n3. Start the server:\r\n\r\n\t\tpython example/example.py\r\n\r\nExample App URLs\r\n----------------\r\n\r\nRedirect the user to authenticate with Github:\r\n\r\n\thttp://localhost:5000/login\r\n\r\nCheck if the user is a member of an organization:\r\n\r\n\thttp://localhost:5000/orgs/<organization_name>\r\n\r\nCheck if the user belongs to a certain team:\r\n\r\n\thttp://localhost:5000/teams/<team_id>\r\n\r\nAPI Requests\r\n------------\r\n\r\nAfter authenticating, this extension also provides methods for doing GET requests to the Github API as the authenticated user.\r\n\r\n\tgithub = GithubAuth(\r\n    \tclient_id='123456789',\r\n    \tclient_secret='987654321',\r\n    \tsession_key='user_id'\r\n\t)\r\n\r\n\t# returns the authenticated user\r\n\tgithub.get_github_user()\r\n\t\r\n\t# returns true if the authenticated user is a member of the organization\r\n\tgithub.has_org_access('mindsnacks')\r\n\r\nOptions\r\n-------\r\n\r\n* `session_key` -- Key for the value stored in the session to determine if a user is logged in\r\n* `client_id` -- Given by Github when creating an application\r\n* `client_secret` -- Given by Github when creating an application","tagline":"Authenticate Flask applications with Github.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}